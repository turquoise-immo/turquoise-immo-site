// app-api.js - minimal frontend integration + map
const API_BASE = '';
let listings = [];
let favorites = JSON.parse(localStorage.getItem('favListings')||'[]');
function el(q){return document.querySelector(q)} function els(q){return Array.from(document.querySelectorAll(q))}
document.getElementById('year').textContent = new Date().getFullYear();
async function fetchListings(){ try{ const res = await fetch('/api/listings'); if(!res.ok) throw new Error('no api'); listings = await res.json(); }catch(e){ listings = sampleFallback(); } renderListings(listings); initMapMarkers(listings); }
function sampleFallback(){ return [{id:'A100',title:'Bel appartement',price:350000,surface:72,city:'Paris',type:'Appartement',transaction:'Vente',offerDemand:'Offre',lat:48.8566,lng:2.3522,images:['https://images.unsplash.com/photo-1560185127-6d6d7f0c1949?q=80&w=1200'],description:'Charmant appartement.'}]; }
function renderListings(items){ const grid=el('#listingsGrid'); grid.innerHTML=''; if(!items||items.length===0){ el('#noResults').style.display='block'; return;} el('#noResults').style.display='none'; items.forEach(it=>{ const card=document.createElement('article'); card.className='card-listing'; card.innerHTML=`<div class="media"><img src="${it.images&&it.images[0]||''}" style="width:100%;height:180px;object-fit:cover"></div><div style="padding:0.8rem"><h3>${it.title}</h3><div style="color:var(--muted)">${it.city} • ${it.surface||'-'} m²</div><p style="color:var(--muted)">${it.description||''}</p><div style="display:flex;justify-content:space-between;align-items:center"><div><button class="btn-secondary" onclick="openRdvForm('${it.id}')">Prendre RDV</button></div><div style="font-size:0.85rem;color:var(--muted)">${it.id}</div></div></div>`; grid.appendChild(card); }); els('.fav-btn').forEach(b=>b.addEventListener('click',e=>{ toggleFavorite(b.dataset.id); updateFavUI(); e.stopPropagation(); })); }
function toggleFavorite(id){ const i = favorites.indexOf(id); if(i===-1) favorites.push(id); else favorites.splice(i,1); localStorage.setItem('favListings',JSON.stringify(favorites)); updateFavUI(); }
function updateFavUI(){ el('#favCount').textContent = favorites.length; const favList = el('#favList'); if(!favList) return; favList.innerHTML=''; if(favorites.length===0){ favList.innerHTML='<p>Aucun favori.</p>'; return;} favorites.forEach(id=>{ const it = listings.find(l=>l.id===id)||{}; const d=document.createElement('div'); d.innerHTML=`<strong>${it.title||id}</strong><br><small>${it.city||''}</small>`; favList.appendChild(d); }); }
el('#applyFilters').addEventListener('click',()=>{ applyFilters();}); el('#resetFilters').addEventListener('click',()=>{ resetFilters();});
function applyFilters(){ const city=el('#filterCity').value.trim().toLowerCase(); const type=el('#filterType').value; const trans=el('#filterTransaction').value; const offer=el('#filterOfferDemand').value; const max= parseFloat(el('#filterMaxPrice').value)||Infinity; const min= parseFloat(el('#filterMinSurface').value)||0; const text = el('#filterText')?el('#filterText').value.trim().toLowerCase():''; let filtered = listings.filter(l=>{ if(city && !(l.city||'').toLowerCase().includes(city)) return false; if(type && l.type!==type) return false; if(trans && l.transaction!==trans) return false; if(offer && l.offerDemand!==offer) return false; if((l.price||0)>max) return false; if((l.surface||0)<min) return false; if(text){ const hay = `${l.title} ${l.description} ${l.city} ${l.id}`.toLowerCase(); if(!hay.includes(text)) return false;} return true; }); renderListings(filtered); }
function resetFilters(){ ['filterCity','filterType','filterTransaction','filterOfferDemand','filterMaxPrice','filterMinSurface','filterText'].forEach(id=>{ const e=document.getElementById(id); if(!e) return; if(e.tagName==='SELECT') e.selectedIndex=0; else e.value=''; }); renderListings(listings); }
el('#contactForm').addEventListener('submit', async (e)=>{ e.preventDefault(); const payload={ name:el('#contactName').value, email:el('#contactEmail').value, message:el('#contactMessage').value }; try{ const res = await fetch('/api/contact',{ method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload) }); if(!res.ok) throw new Error('error'); el('#contactSuccess').style.display='block'; el('#contactForm').reset(); }catch(err){ alert('Erreur: '+err.message); } });
el('#rdvForm') && el('#rdvForm').addEventListener('submit', async (e)=>{ e.preventDefault(); const payload={ name:el('#rdvName').value, email:el('#rdvEmail').value, phone:el('#rdvPhone').value, datetime:el('#rdvDatetime').value, annonce:el('#rdvAnnonce').value }; try{ const res = await fetch('/api/rdv',{ method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify(payload) }); if(!res.ok) throw new Error('error'); el('#rdvSuccess') && (el('#rdvSuccess').style.display='block'); el('#rdvForm') && el('#rdvForm').reset(); }catch(err){ alert('Erreur RDV: '+err.message); } });
function openRdvForm(id){ if(el('#rdvAnnonce')) el('#rdvAnnonce').value = id; location.hash='#contact'; setTimeout(()=> el('#rdvDatetime') && el('#rdvDatetime').focus(),400); }
let map, markersLayer; function initMap(){ map = L.map('map').setView([46.5,2.5],6); L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution:'&copy; OpenStreetMap contributors' }).addTo(map); markersLayer = L.layerGroup().addTo(map); }
function initMapMarkers(list){ if(!map) initMap(); markersLayer.clearLayers(); list.forEach(it=>{ if(it.lat && it.lng){ const m = L.marker([it.lat,it.lng]); m.bindPopup(`<strong>${it.title}</strong><br>${it.city}`); m.addTo(markersLayer); } }); }
document.addEventListener('DOMContentLoaded', ()=>{ fetchListings(); document.getElementById('openFavorites').addEventListener('click', ()=>{ el('#favPanel').style.display='block'; updateFavUI();}); el('#closeFav').addEventListener('click', ()=> el('#favPanel').style.display='none'); });